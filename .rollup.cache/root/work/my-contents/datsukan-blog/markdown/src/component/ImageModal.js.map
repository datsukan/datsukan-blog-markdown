{"version":3,"file":"ImageModal.js","sourceRoot":"","sources":["ImageModal.tsx"],"names":[],"mappings":";;AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,EAA4B,MAAM,OAAO,CAAA;AAClE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAA;AActD,MAAM,CAAC,IAAM,UAAU,GAAG,UAAC,EAA+B;QAA7B,IAAI,UAAA,EAAE,OAAO,aAAA,EAAE,KAAK,WAAA;IAC/C,IAAM,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,CAAA;IAEpC,OAAO,CACL,KAAC,UAAU,CAAC,IAAI,aAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,QAAQ,gBACvC,KAAC,MAAM,aACL,EAAE,EAAC,KAAK,EACR,SAAS,EAAC,oDAAoD,EAC9D,YAAY,EAAE,eAAe,EAC7B,OAAO,EAAE,OAAO,gBAEhB,wBACE,SAAS,EAAC,qCAAqC,EAC/C,GAAG,EAAE,eAAe,iBAEpB,KAAC,UAAU,CAAC,KAAK,aACf,EAAE,EAAE,QAAQ,EACZ,KAAK,EAAC,uBAAuB,EAC7B,SAAS,EAAC,WAAW,EACrB,OAAO,EAAC,aAAa,EACrB,KAAK,EAAC,sBAAsB,EAC5B,SAAS,EAAC,aAAa,EACvB,OAAO,EAAC,WAAW,gBAEnB,KAAC,MAAM,CAAC,OAAO,IAAC,SAAS,EAAC,4DAA4D,GAAG,IACxE,EAGnB,wBACE,SAAS,EAAC,oCAAoC,iBAClC,MAAM,4BAGb,EACP,KAAC,UAAU,CAAC,KAAK,aACf,EAAE,EAAE,QAAQ,EACZ,KAAK,EAAC,uBAAuB,EAC7B,SAAS,EAAC,gDAAgD,EAC1D,OAAO,EAAC,qCAAqC,EAC7C,KAAK,EAAC,sBAAsB,EAC5B,SAAS,EAAC,qCAAqC,EAC/C,OAAO,EAAC,gDAAgD,gBAExD,uBACE,SAAS,EAAC,qFAAqF,EAC/F,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,KAAK,CAAC,EAAd,CAAc,gBAE7B,yBAAS,KAAK,IAAE,SAAS,EAAC,yBAAyB,IAAG,IAClD,IACW,KACf,IACC,IACO,CACnB,CAAA;AACH,CAAC,CAAA","sourcesContent":["import { Fragment, useRef, Dispatch, SetStateAction } from \"react\"\nimport { Dialog, Transition } from \"@headlessui/react\"\n\nexport type Image = {\n  src: string\n  alt: string\n  title?: string\n}\n\nexport type Props = {\n  open: boolean\n  setOpen: Dispatch<SetStateAction<boolean>>\n  image: Image\n}\n\nexport const ImageModal = ({ open, setOpen, image }: Props) => {\n  const cancelButtonRef = useRef(null)\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        className=\"fixed inset-0 z-10 cursor-zoom-out overflow-y-auto\"\n        initialFocus={cancelButtonRef}\n        onClose={setOpen}\n      >\n        <div\n          className=\"block min-h-screen px-4 text-center\"\n          ref={cancelButtonRef}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"transition-opacity fixed inset-0 bg-gray-700 bg-opacity-75\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"inline-block h-screen align-middle\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 translate-y-0 scale-95\"\n            enterTo=\"opacity-100 translate-y-0 scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 translate-y-0 scale-95\"\n          >\n            <div\n              className=\"transition-all inline-block max-h-screen max-w-7xl transform align-middle shadow-xl\"\n              onClick={() => setOpen(false)}\n            >\n              <img {...image} className=\"max-h-screen max-w-full\" />\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n"]}